@model PaginatedList<EquiMarketApp.Models.Ad>

@{
    ViewData["Title"] = "Index";
}

@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var isUserAdmin = User.IsInRole("Admin");
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="w-full max-w-full mb-4 bg-transparent">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Title)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().BirthYear)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Height)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Gender)
            </th>
            @if (isUserAdmin)
            {
                <th>
                    @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().IsApproved)
                </th>
            }
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Breed.Name)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Origin.Country)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().AdType.Name)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().Location.Name)
            </th>
            <th>
                @Html.DisplayNameFor(modelItem => modelItem.FirstOrDefault().User.Id)
            </th>
            <th>Bild/er</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BirthYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Height)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                @if (isUserAdmin)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.IsApproved)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Breed.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Origin.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AdType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Id)
                </td>
                <td>
                    @if (item.Images != null && item.Images.Any())
                    {
                        foreach (var image in item.Images)
                        {
                            <img src="@Url.Content("~/" + image.ImagePath)" alt="Bild på annonsobjekt"
                                style="width: 150px; height: auto;" />
                        }
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AdId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.AdId" asp-route-returnUrl="@Context.Request.Path">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.AdId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@* Paginering *@
@if (Model.HasPreviousPage)
{
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize">Föregående</a>
}
else
{
    <span>Föregående</span>
}

@if (Model.HasNextPage)
{
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize">Nästa</a>
}
else
{
    <span>Nästa</span>
}
